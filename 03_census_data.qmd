---
title: "Census Data Retrieval for San Luis Obispo County, CA"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Introduction

This vignette demonstrates how to retrieve decennial Census data for San Luis Obispo County, California using the `tidycensus` package in R.

## Step 1: Get API Key

First, you need to obtain an API key from the U.S. Census Bureau. You can sign up for a free API key at [Census Bureau API Key Signup](https://api.census.gov/data/key_signup.html).

```{r}
# Replace with your actual API key
api_key <- "25a51aebc8cc7e3b63afadedb7572521c320d6d6"
```

## Step 2: Install and Load Necessary Packages

Next, install and load the necessary packages. If the packages are already installed, this step will just load them.

```{r}
# Install necessary packages if not already installed
if (!require(tidycensus)) install.packages('tidycensus')
if (!require(ggplot2)) install.packages('ggplot2')
if (!require(terra)) install.packages('terra')
if (!require(r2r)) install.packages('r2r')

# Load the packages
library(tidycensus)
library(ggplot2)
library(terra)
library(r2r)
```

## Step 3: Set Census API Key

Set the Census API key. This step is necessary to authenticate your requests to the Census API.

```{r}
# Set Census API key
census_api_key(api_key, install=TRUE, overwrite=TRUE)
readRenviron("~/.Renviron")
```

## Step 4: Define Parameters

Define the parameters for the data retrieval. In this case, we're interested in data for San Luis Obispo County, California from the 2020 decennial Census.



```{r}
# Define county and state for San Luis Obispo, CA
county <- "079"  # FIPS code for San Luis Obispo County
state <- "06"    # FIPS code for California
year <- 2020     # Year of the decennial census
```

# I am going to give you the FIPS code for multiple locations in the US. You can use this to get the data for the location you are interested in.
```{r}
# Define the vectors
cities <- c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17",
            "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33",
            "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50")
counties <- c(061, 037, 031, 201, 013, 101, 029, 073, 113, 085,
              015, 031, 439, 049, 097, 119, 075, 033, 031, 109,
              037, 141, 043, 025, 003, 051, 163, 111, 157, 005,
              079, 001, 019, 019, 067, 013, 209, 121, 055, 041,
              183, 810, 037, 086, 001, 053, 143, 029, 173, 439)
states <- c(36, 06, 17, 48, 04, 42, 48, 06, 48, 06, 48, 12, 48, 39, 18, 37, 06, 53, 08, 40, 47, 48, 24, 25, 32, 41, 26, 21,
            47, 24, 55, 35, 06, 04, 06, 04, 29, 13, 31, 08, 37, 51, 06, 12, 06, 27, 40, 06, 20, 48)
countyNames <- c("new_york", "los_angeles", "chicago", "houston", "phoenix", "philadelphia", "san_antonio", "san_diego", "dallas", 
                 "san_jose", "austin", "jacksonville", "fort_worth", "columbus", "indianapolis", "charlotte", "san_francisco",
                 "seattle", "denver", "oklahoma_city", "nashville", "el_paso", "washington", "boston", "las_vegas", "portland", 
                 "detroit", "louisville", "memphis", "baltimore", "milwaukee", "albuquerque", "fresno", "tucson", "sacramento",
                 "mesa", "kansas_city", "atlanta", "omaha", "colorado_springs", "raleigh", "virginia_beach", "long_beach", "miami",
                 "oakland", "minneapolis", "tulsa", "bakersfield", "wichita", "arlington")
stateNames <- c("NY", "CA", "IL", "TX", "AZ", "PA", "TX", "CA", "TX", "CA", "TX", "FL", "TX", "OH", "IN", "NC", "CA", "WA", "CO",
                "OK", "TN", "TX", "MD", "MA", "NV", "OR", "MI", "KY", "TN", "MD", "WI", "NM", "CA", "AZ", "CA", "AZ", "MO", "GA", 
                "NE", "CO", "NC", "VA", "CA", "FL", "CA", "MN", "OK", "CA", "KS", "TX")

# Create the data frame
df <- data.frame(City = cities, CountyCode = counties, StateCode = states, CountyName = countyNames, StateName = stateNames)

# Print the data frame
print(df)

```


## Step 5: Define Variables

Define the variables you're interested in. These correspond to specific racial and ethnic categories.

```{r}
race_vars <- c(
  Hispanic = "P2_002N",
  White = "P2_005N",
  Black = "P2_006N",
  Asian = "P2_008N",
  AI_AN = "P2_007N", ## American Indian and Alaska Native
  NH_PI = "P2_009N", ## Native Hawaiian and Other Pacific Islander
  some_Other = "P2_010N", ## Other
  Two_or_more = "P2_011N" ## Two or more
)
```

## Step 6: Retrieve Data

Finally, retrieve the data using the `get_decennial` function from the `tidycensus` package.

```{r}
slo_ca_df <- get_decennial(geography = "county", 
              variables = race_vars, 
              state = state, 
              county = county, 
              year = year)
```

## Conclusion

You now have a data frame `slo_ca_df` that contains the decennial Census data for San Luis Obispo County, California. You can use this data for further analysis or visualization.
